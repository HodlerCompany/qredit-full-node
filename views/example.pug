
html(lang='en')
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge')
    meta(name='viewport', content='width=device-width, initial-scale=1')

    meta(name='description', content='')
    meta(name='author', content='')

    link(rel="icon", href="https://ark.io/wp-content/uploads/2016/10/welcome-ark-1.png", sizes="32x32")
    title Ark Node
    // Bootstrap core CSS
    link(href='https://cdn.jsdelivr.net/bootstrap/3.3.7/css/bootstrap.min.css', rel='stylesheet')
    link(href='https://maxcdn.bootstrapcdn.com/font-awesome/4.6.3/css/font-awesome.min.css', rel='stylesheet')
    link(href="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.css", rel="stylesheet")
    // HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries
    //if lt IE 9
    script(src='https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js')
    script(src='https://oss.maxcdn.com/respond/1.4.2/respond.min.js')

  body(style='background-image:url(https://ark.io/wp-content/uploads/2016/10/ark-planet.jpg); background-size:cover')
    block content
      nav.navbar.navbar-default.navbar-fixed-top
        .container
          .navbar-header
            button.navbar-toggle.collapsed(type='button', data-toggle='collapse', data-target='#navbar', aria-expanded='false', aria-controls='navbar')
              span.sr-only Toggle navigation
              span.icon-bar
              span.icon-bar
              span.icon-bar
            a.navbar-brand(href='/app/') Ark Node
          #navbar.navbar-collapse.collapse
            ul.nav.navbar-nav
              li(class=(title == 'Home') ? 'active' : null)
                a(href='/app/') Home
              li(class=(title == 'About') ? 'active' : null)
                a(href='/app/about') About
            ul.nav.navbar-nav.navbar-right
              if user
                li.dropdown
                  a.navbar-avatar.dropdown-toggle(href='#', data-toggle='dropdown')
                    span #{user.name || user.email} &nbsp;
                    i.caret
                  ul.dropdown-menu
                    li
                      a(href='profile') Profile
                    li.divider(role='separator')
                    li
                      a(href='logout') Logout
              else
                li(class=(title == 'Log in') ? 'active' : null)
                  a(href='/app/login') Log-in
                li(class=(title == 'Register') ? 'active' : null)
                  a(href='/app/register') Register
          // /.nav-collapse
      .container(style='margin-top:50px;padding-top:15px;')
        .jumbotron(style='opacity:0.8;')
          h1
            img(src="https://ark.io/wp-content/uploads/2016/10/logo-red.png", alt="alt")
            |  ARK node
          h3 Congratulations you just installed ark-node sucessfully
          ul
            li nethash
              pre #{nethash}
        .row
          .col-md-6
            .well(style='opacity:0.8;')
              h3 Transaction pool
              #tpoolchart

          .col-md-6
            .well(style='opacity:0.8;')
              h3 Node height
              #heightchart

          .col-md-6
            .well(style='opacity:0.8;')
              h3 Transactions per block
              #txchart

          .col-md-6
            .well(style='opacity:0.8;')
              h3 TPS
              #tpschart


    script(src='https://cdn.jsdelivr.net/jquery/3.1.1/jquery.min.js')
    script(src='https://cdn.jsdelivr.net/bootstrap/3.3.7/js/bootstrap.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js')
    script.
      var node = {};
      var updateTime = 4; //update every 4s

      function updateChart(type, value){
        node[type].data.push({
          date:new Date().getTime(),
          value:value
        });
        if(node[type].data.length>50){
          node[type].data.shift();
        }
        node[type].chart.setData(node[type].data);
      }

      function createChart(type, label, path){
        node[type] = {
          data: [],
          path: path,
          label: label
        };
        node[type].chart = new Morris.Line({
          element: type+'chart',
          data: node[type].data,
          pointSize:0,
          xkey: 'date',
          ykeys: ['value'],
          ymin: 'auto',
          smooth: false,
          labels: [label]
        });
      }

      var resolve = function(path, obj) {
        return path.split('.').reduce(function(prev, curr) {
          return prev ? prev[curr] : undefined
        }, obj || self)
      }

      var lastTpool;
      function updateData(){
        $.get("/app/getStats", function(res){
          res.tps=(res.transactionPool - lastTpool)/updateTime;
          if(!res.tps ||Â res.tps<0) res.tps=0;
          lastTpool=res.transactionPool;
          for(var type in node){
            updateChart(type, resolve(node[type].path, res));
          }

        });
      };

      createChart('height', 'Height', 'lastBlock.height');
      createChart('tpool', 'Transaction pool', 'transactionPool');
      createChart('tx', 'Transactions', 'lastBlock.numberOfTransactions');
      createChart('tps', 'TPS', 'tps');

      updateData();
      setInterval(updateData, updateTime*1000);
